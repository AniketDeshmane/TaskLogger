name: Build and Publish Task Logger

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'TaskLogger'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_NAME }}.csproj
      
    - name: Build application
      run: dotnet build ${{ env.PROJECT_NAME }}.csproj --configuration Release --no-restore
      
    - name: Publish application (Framework-dependent)
      run: |
        dotnet publish ${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --no-build `
          --output ./publish-framework `
          --self-contained false `
          --runtime win-x64
      
    - name: Publish application (Self-contained)
      run: |
        dotnet publish ${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --output ./publish-self-contained `
          --self-contained true `
          --runtime win-x64
      
    - name: Create release packages
      shell: pwsh
      run: |
        Write-Host "Creating release packages..."
        
        # Create framework-dependent package
        Write-Host "Creating framework-dependent package..."
        Compress-Archive -Path "./publish-framework/*" -DestinationPath "./TaskLogger-Windows-x64-FrameworkDependent.zip" -Force
        
        # Create self-contained package
        Write-Host "Creating self-contained package..."
        Compress-Archive -Path "./publish-self-contained/*" -DestinationPath "./TaskLogger-Windows-x64-SelfContained.zip" -Force
        
        # Create installer package with both versions
        Write-Host "Creating installer package..."
        New-Item -ItemType Directory -Path "./installer" -Force | Out-Null
        
        # Copy self-contained version to installer
        Copy-Item -Path "./publish-self-contained/*" -Destination "./installer/" -Recurse -Force
        
        # Create installer batch file
        @"
        @echo off
        echo ==========================================
        echo    Task Logger - Installation
        echo ==========================================
        echo.
        
        set INSTALL_DIR=%LOCALAPPDATA%\TaskLogger
        
        echo Installing to: %INSTALL_DIR%
        echo.
        
        if exist "%INSTALL_DIR%" (
            echo Removing previous installation...
            rmdir /s /q "%INSTALL_DIR%"
        )
        
        echo Creating installation directory...
        mkdir "%INSTALL_DIR%"
        
        echo Copying application files...
        xcopy /E /I /Y "%~dp0*" "%INSTALL_DIR%\" >nul
        
        echo Creating desktop shortcut...
        powershell -Command "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%USERPROFILE%\Desktop\Task Logger.lnk'); $Shortcut.TargetPath = '%INSTALL_DIR%\TaskLogger.exe'; $Shortcut.WorkingDirectory = '%INSTALL_DIR%'; $Shortcut.IconLocation = '%INSTALL_DIR%\TaskLogger.exe'; $Shortcut.Save()"
        
        echo.
        echo ==========================================
        echo    Installation Complete!
        echo ==========================================
        echo.
        echo Task Logger has been installed to:
        echo   %INSTALL_DIR%
        echo.
        echo A desktop shortcut has been created.
        echo.
        echo Would you like to start Task Logger now? (Y/N)
        choice /c YN /n /m "Select [Y/N]: "
        if errorlevel 2 goto end
        if errorlevel 1 goto start
        
        :start
        echo Starting Task Logger...
        start "" "%INSTALL_DIR%\TaskLogger.exe"
        goto end
        
        :end
        echo.
        pause
        "@ | Out-File -FilePath "./installer/install.bat" -Encoding ASCII
        
        # Create uninstaller batch file
        @"
        @echo off
        echo ==========================================
        echo    Task Logger - Uninstallation
        echo ==========================================
        echo.
        
        set INSTALL_DIR=%LOCALAPPDATA%\TaskLogger
        
        echo This will uninstall Task Logger from your system.
        echo.
        echo Installation directory: %INSTALL_DIR%
        echo.
        echo Are you sure you want to uninstall? (Y/N)
        choice /c YN /n /m "Select [Y/N]: "
        if errorlevel 2 goto cancel
        if errorlevel 1 goto uninstall
        
        :uninstall
        echo.
        echo Stopping Task Logger if running...
        taskkill /F /IM TaskLogger.exe >nul 2>&1
        
        echo Removing installation directory...
        if exist "%INSTALL_DIR%" rmdir /s /q "%INSTALL_DIR%"
        
        echo Removing desktop shortcut...
        if exist "%USERPROFILE%\Desktop\Task Logger.lnk" del "%USERPROFILE%\Desktop\Task Logger.lnk"
        
        echo Removing startup entry if exists...
        reg delete "HKCU\Software\Microsoft\Windows\CurrentVersion\Run" /v "TaskLogger" /f >nul 2>&1
        
        echo.
        echo ==========================================
        echo    Uninstallation Complete!
        echo ==========================================
        echo.
        echo Task Logger has been removed from your system.
        goto end
        
        :cancel
        echo.
        echo Uninstallation cancelled.
        goto end
        
        :end
        echo.
        pause
        "@ | Out-File -FilePath "./installer/uninstall.bat" -Encoding ASCII
        
        # Create installer package
        Compress-Archive -Path "./installer/*" -DestinationPath "./TaskLogger-Windows-x64-Installer.zip" -Force
        
        Write-Host "Packages created successfully!"
        Get-ChildItem *.zip | ForEach-Object { Write-Host "  - $($_.Name) ($([math]::Round($_.Length / 1MB, 2)) MB)" }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TaskLogger-Build-${{ github.run_number }}
        path: |
          ./TaskLogger-Windows-x64-FrameworkDependent.zip
          ./TaskLogger-Windows-x64-SelfContained.zip
          ./TaskLogger-Windows-x64-Installer.zip
        retention-days: 30

  create-release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: TaskLogger-Build-${{ github.run_number }}
        path: ./artifacts
        
    - name: Generate Release Notes
      id: release_notes
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}".TrimStart('v')
        $date = Get-Date -Format "yyyy-MM-dd"
        
        $notes = @"
        ## Task Logger $version
        
        Released: $date
        
        ### Installation Options
        
        1. **TaskLogger-Windows-x64-Installer.zip** - Recommended for most users
           - Contains self-contained version with installer
           - No .NET runtime required
           - Includes install and uninstall scripts
        
        2. **TaskLogger-Windows-x64-SelfContained.zip** - Portable version
           - No installation required
           - No .NET runtime required
           - Extract and run TaskLogger.exe
        
        3. **TaskLogger-Windows-x64-FrameworkDependent.zip** - Smallest size
           - Requires .NET 8.0 Desktop Runtime
           - For users who already have .NET installed
        
        ### System Requirements
        
        - Windows 10/11 (64-bit)
        - .NET 8.0 Desktop Runtime (only for framework-dependent version)
        
        ### What's New
        
        - Beautiful WPF interface with modern design
        - System tray integration
        - Automatic task logging on system events
        - Task history with search and export
        - Database storage for tasks
        - Configurable settings
        "@
        
        # Output for GitHub Actions
        echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_OUTPUT
        echo $notes >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Task Logger ${{ github.ref_name }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        files: |
          ./artifacts/TaskLogger-Windows-x64-Installer.zip
          ./artifacts/TaskLogger-Windows-x64-SelfContained.zip
          ./artifacts/TaskLogger-Windows-x64-FrameworkDependent.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-nightly:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      contents: write
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: TaskLogger-Build-${{ github.run_number }}
        path: ./artifacts
        
    - name: Update Nightly Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nightly
        name: Nightly Build
        body: |
          ## Task Logger - Nightly Build
          
          **⚠️ This is an automated nightly build from the latest main branch.**
          
          Last updated: ${{ github.event.head_commit.timestamp }}
          Commit: ${{ github.sha }}
          
          ### Download Options
          
          - **TaskLogger-Windows-x64-Installer.zip** - Full installer package
          - **TaskLogger-Windows-x64-SelfContained.zip** - Portable version
          - **TaskLogger-Windows-x64-FrameworkDependent.zip** - Requires .NET 8.0
          
          For stable releases, please check the [Releases](https://github.com/${{ github.repository }}/releases) page.
        files: |
          ./artifacts/TaskLogger-Windows-x64-Installer.zip
          ./artifacts/TaskLogger-Windows-x64-SelfContained.zip
          ./artifacts/TaskLogger-Windows-x64-FrameworkDependent.zip
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}